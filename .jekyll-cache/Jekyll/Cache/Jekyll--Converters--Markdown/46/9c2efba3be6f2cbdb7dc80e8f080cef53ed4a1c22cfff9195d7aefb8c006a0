I"Ï	<h3 id="copy">copy</h3>
<p>Copies the elements in the range <code class="language-plaintext highlighter-rouge">[first, last)</code>, to another range begining at <code class="language-plaintext highlighter-rouge">d_first</code>.</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">InputIt</span><span class="p">,</span> <span class="k">class</span> <span class="nc">OutputIt</span><span class="p">&gt;</span>
<span class="n">OutputIt</span> <span class="nf">copy</span><span class="p">(</span><span class="n">InputIt</span> <span class="n">first</span><span class="p">,</span> <span class="n">InputIt</span> <span class="n">last</span><span class="p">,</span> <span class="n">OutputIt</span> <span class="n">d_first</span><span class="p">);</span></code></pre></figure>

<p>The behaviour of the copy is equivalent to:</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">InputIt</span><span class="p">,</span> <span class="k">class</span> <span class="nc">OutputIt</span><span class="p">&gt;</span>
<span class="n">OutputIt</span> <span class="nf">copy</span><span class="p">(</span><span class="n">InputIt</span> <span class="n">first</span><span class="p">,</span> <span class="n">InputIt</span> <span class="n">last</span><span class="p">,</span> <span class="n">OutputIt</span> <span class="n">d_first</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span> <span class="p">(</span> <span class="n">first</span> <span class="o">!=</span> <span class="n">last</span><span class="p">)</span> <span class="p">{</span>
        <span class="o">*</span><span class="n">d_first</span> <span class="o">=</span> <span class="o">*</span><span class="n">first</span><span class="p">;</span>
        <span class="n">first</span><span class="o">++</span><span class="p">;</span>
        <span class="n">d_first</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">d_first</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<p>The behaviour is undefined if <code class="language-plaintext highlighter-rouge">d_first</code> is in the range <code class="language-plaintext highlighter-rouge">[first, last)</code>.</p>

:ET